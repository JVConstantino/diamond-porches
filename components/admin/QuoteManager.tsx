import React from 'react';
import { useAppContext } from '../../context/AppContext';
import type { Quote } from '../../types';

const QuoteManager: React.FC = () => {
    const { quotes, setQuotes } = useAppContext();

    const handleContact = (phone: string, quoteDetails: Quote) => {
        const message = `Hello ${quoteDetails.userInfo.name}, this is DIAMOND Home Improvement regarding your recent online estimate for a ${quoteDetails.projectType.name}. We'd love to discuss the next steps when you have a moment.`;
        const encodedMessage = encodeURIComponent(message);
        // Sanitize phone number to include only digits
        const sanitizedPhone = phone.replace(/\D/g, '');
        const url = `https://wa.me/${sanitizedPhone}?text=${encodedMessage}`;
        window.open(url, '_blank');
    };
    
    const handleDelete = (id: string) => {
        if (window.confirm('Are you sure you want to delete this quote request?')) {
            setQuotes(prev => prev.filter(q => q.id !== id));
        }
    };

    return (
        <div className="space-y-8">
            <h1 className="text-3xl font-bold text-gray-800">Quote Requests</h1>
            <p className="text-gray-600 -mt-6">These are the estimates generated by clients on your website. Newest requests appear first.</p>
            
            <div className="bg-white p-6 rounded-lg shadow-sm border border-gray-200">
                {quotes.length === 0 ? (
                    <div className="text-center py-12">
                        <svg xmlns="http://www.w3.org/2000/svg" className="mx-auto h-12 w-12 text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                            <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M3 19v-8.93a2 2 0 01.89-1.664l7-4.666a2 2 0 012.22 0l7 4.666A2 2 0 0121 10.07V19M3 19a2 2 0 002 2h14a2 2 0 002-2M3 19l6.75-4.5M21 19l-6.75-4.5M12 12l-6.75 4.5M12 12l6.75 4.5" />
                        </svg>
                        <h3 className="mt-2 text-sm font-medium text-gray-900">No quote requests</h3>
                        <p className="mt-1 text-sm text-gray-500">When a user completes a simulation, it will appear here.</p>
                    </div>
                ) : (
                    <div className="space-y-4">
                        {quotes.map(quote => (
                            <div key={quote.id} className="p-4 border rounded-md bg-gray-50/80">
                                <div className="flex flex-col sm:flex-row justify-between sm:items-center border-b pb-3 mb-3">
                                    <div>
                                        <h3 className="font-semibold text-lg text-brand-blue-800">{quote.userInfo.name}</h3>
                                        <p className="text-sm text-gray-500">{quote.userInfo.phone} &middot; {quote.userInfo.city}, {quote.userInfo.neighborhood}</p>
                                    </div>
                                    <p className="text-sm text-gray-500 mt-2 sm:mt-0">
                                        {new Date(quote.date).toLocaleDateString('en-US', { year: 'numeric', month: 'short', day: 'numeric', hour: '2-digit', minute: '2-digit' })}
                                    </p>
                                </div>
                                <div className="grid grid-cols-1 md:grid-cols-3 gap-x-6 gap-y-2 text-sm">
                                    <div><strong>Project:</strong> {quote.projectType.name}</div>
                                    <div><strong>Dimensions:</strong> {quote.dimensions.width} ft x {quote.dimensions.length} ft</div>
                                    <div><strong>Material:</strong> {quote.material.name}</div>
                                </div>
                                <div className="mt-4 flex flex-col sm:flex-row justify-between items-center">
                                    <p className="font-bold text-lg text-green-600">
                                        Est. ${quote.estimatedCost.toLocaleString('en-US', { minimumFractionDigits: 2, maximumFractionDigits: 2 })}
                                    </p>
                                    <div className="flex gap-2 mt-3 sm:mt-0">
                                        <button onClick={() => handleContact(quote.userInfo.phone, quote)} className="px-3 py-1.5 text-sm font-semibold text-white bg-green-600 rounded-md hover:bg-green-700 transition-colors">
                                            Contact via WhatsApp
                                        </button>
                                        <button onClick={() => handleDelete(quote.id)} className="px-3 py-1.5 text-sm font-medium text-red-700 bg-red-100 rounded-md hover:bg-red-200 transition-colors">
                                            Delete
                                        </button>
                                    </div>
                                </div>
                            </div>
                        ))}
                    </div>
                )}
            </div>
        </div>
    );
};

export default QuoteManager;
